# This workflow name will be displayed in the GitHub Actions tab
name: CI & CD Pipeline

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Environment variables available to all jobs
env:
  DOCKERHUB_IMAGE: manisankarrr/ai-roadmap-generator

jobs:
  # ── Job 1: Build and Push Backend to Docker Hub ──
  build-backend:
    name: Build & Push Backend Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          # The context is the backend folder where the Dockerfile is
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_IMAGE }}:latest

  # ── Job 2: Deploy Frontend to Vercel ──
  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    # This job will only run if the 'build-backend' job completes successfully
    needs: build-backend
    # **NEW**: Set environment variables specifically for this job
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Project Settings
        # This command now implicitly uses the environment variables set above
        run: vercel pull --yes --environment=production

      - name: Build & Deploy Project to Vercel
        # These commands also use the environment variables automatically
        run: vercel build --prod && vercel deploy --prod --prebuilt
        working-directory: ./frontend

